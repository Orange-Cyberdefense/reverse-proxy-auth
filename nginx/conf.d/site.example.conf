server {
    listen 80 default_server;
    server_name site.example;

    # redirection to HTTPS
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl default_server;
    server_name site.example;
    proxy_ssl_server_name on;

    # must use HTTPS to use cert authent
    ssl_certificate /etc/nginx/ssl/tls/site.example.crt;
    ssl_certificate_key /etc/nginx/ssl/tls/site.example.key;

    # client part
    ssl_client_certificate /etc/nginx/ssl/ca/ca.crt;
    ssl_crl /etc/nginx/ssl/ca/ca.crl;
    ssl_verify_client on;

    access_log /var/log/nginx/site.example;

    location / {
      # deny access if not compliant
      if ($ssl_client_verify != SUCCESS) {
        return 403;
      }

      # HTTP proxy stuff for web servers behind
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;

      # Fix the "It appears that your reverse proxy set up is broken" error.
      proxy_pass          http://protectedapp;
      proxy_read_timeout  90;

      # web sockets
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

    }
  }
